{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"3KAOfJmNn7_2","executionInfo":{"status":"ok","timestamp":1660599860720,"user_tz":240,"elapsed":2564,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["import os\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import zipfile\n","import pickle\n","import tensorflow as tf\n","\n","from sklearn.metrics import accuracy_score\n","from yellowbrick.classifier import ConfusionMatrix\n","from sklearn.neural_network import MLPClassifier\n","\n","from scipy import stats\n","from scipy.stats import randint\n","\n","# prep\n","from sklearn.model_selection import train_test_split\n","from sklearn import preprocessing\n","from sklearn.datasets import make_classification\n","from sklearn.preprocessing import binarize, LabelEncoder, MinMaxScaler\n","\n","# models\n","from sklearn.tree import DecisionTreeClassifier\n","\n","# Validation libraries\n","from sklearn import metrics\n","from sklearn.metrics import accuracy_score, mean_squared_error, precision_recall_curve\n","from sklearn.model_selection import cross_val_score, KFold\n","\n","#Neural Network\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.model_selection import RandomizedSearchCV, GridSearchCV, train_test_split\n","\n","#Naive bayes\n","from sklearn.naive_bayes import GaussianNB \n","\n","from subprocess import check_output"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"yarpQAqu3VX_","executionInfo":{"status":"ok","timestamp":1660599860721,"user_tz":240,"elapsed":6,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":[""]},{"cell_type":"code","execution_count":2,"metadata":{"id":"dKRnlHyd8nqY","colab":{"base_uri":"https://localhost:8080/","height":339},"executionInfo":{"status":"error","timestamp":1660599861363,"user_tz":240,"elapsed":646,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}},"outputId":"728e83af-2177-4ffc-b526-b6da41f77244"},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-61f149972bf8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mpath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'/content/drive/MyDrive/PROJETO_FINAL_IA/archive.zip'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mzip_object\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mzipfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZipFile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'r'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mzip_object\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextractall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'./'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mzip_object\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/zipfile.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, file, mode, compression, allowZip64, compresslevel)\u001b[0m\n\u001b[1;32m   1238\u001b[0m             \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1239\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1240\u001b[0;31m                     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfilemode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1241\u001b[0m                 \u001b[0;32mexcept\u001b[0m \u001b[0mOSError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1242\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0mfilemode\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmodeDict\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/PROJETO_FINAL_IA/archive.zip'"]}],"source":["path = '/content/drive/MyDrive/PROJETO_FINAL_IA/archive.zip'\n","zip_object = zipfile.ZipFile(file = path, mode = 'r')\n","zip_object.extractall('./')\n","zip_object.close()"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9txHg20yEGIR","executionInfo":{"status":"ok","timestamp":1660600040353,"user_tz":240,"elapsed":44213,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}},"outputId":"e33aed45-e060-48b9-8dff-2b259f8df84d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861367,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"wAQDxO-S80Gv"},"outputs":[],"source":["survey = pd.read_csv('/content/survey.csv', sep=',')\n","\n","\n","#Pandas: whats the data row count?\n","print(survey.shape)\n","    \n","#Pandas: whats the distribution of the data?\n","print(survey.describe())\n","    \n","#Pandas: What types of data do i have?\n","print(survey.info())"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861368,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"_noZN1fYHC2x"},"outputs":[],"source":["print('Linhas e colunas\\n')\n","print(survey.shape)\n","print('\\nDados Numericos\\n')\n","print(survey.describe())\n","print('\\nInformações detalhas\\n')\n","print(survey.info())\n","print('\\nDados Nulos\\n')\n","print(survey.isnull().sum())\n","print('\\nNome das Colunas\\n')\n","print(survey.columns)"]},{"cell_type":"markdown","metadata":{"id":"Z_UklQsUp3Wa"},"source":["## SUBSTITUINDO VALORES NULOS \"NaN\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VZ4D8uwVIS6m","executionInfo":{"status":"aborted","timestamp":1660599861369,"user_tz":240,"elapsed":27,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["padraoInt = 0\n","padraoString = 'NotInformed'\n","\n","##########################################################################################################\n","\n","intColunas = ['Age']\n","stringColunas = ['Timestamp','Gender', 'Country', 'state', 'self_employed',\n","       'family_history', 'treatment', 'work_interfere', 'no_employees',\n","       'remote_work', 'tech_company', 'benefits', 'care_options',\n","       'wellness_program', 'seek_help', 'anonymity', 'leave',\n","       'mental_health_consequence', 'phys_health_consequence', 'coworkers',\n","       'supervisor', 'mental_health_interview', 'phys_health_interview',\n","       'mental_vs_physical', 'obs_consequence', 'comments']\n","\n","for colunas in survey:\n","  if colunas in intColunas:\n","    survey[colunas] = survey[colunas].fillna(padraoInt)\n","  elif colunas in stringColunas:\n","    survey[colunas] = survey[colunas].fillna(padraoString)\n","  else:\n","    print('Error, coluna %s não reconhecida.' % colunas)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27,"status":"aborted","timestamp":1660599861370,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"Oh9F1EgwvE57"},"outputs":[],"source":["#PÓS DADOS NULOS\n","\n","print('Linhas e colunas\\n')\n","print(survey.shape)\n","print('\\nDados Numericos\\n')\n","print(survey.describe())\n","print('\\nInformações detalhas\\n')\n","print(survey.info())\n","print('\\nDados Nulos\\n')\n","print(survey.isnull().sum())\n","print('\\nNome das Colunas\\n')\n","print(survey.columns)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uIfIjHwsvMHJ","executionInfo":{"status":"aborted","timestamp":1660599861370,"user_tz":240,"elapsed":25,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["#RETIRAR AS COLUNAS E DEIXAR SOMENTE O QUE VAMOS USAR\n","\n","survey = survey.drop(['comments'], axis= 1)\n","survey = survey.drop(['state'], axis= 1)\n","survey = survey.drop(['Timestamp'], axis= 1)\n","survey = survey.drop(['Country'], axis= 1)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":25,"status":"aborted","timestamp":1660599861371,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"tIaRb-JN9F0s"},"outputs":[],"source":["#Genero = Gender\n","\n","gender = survey['Gender'].str.lower()\n","gender = survey['Gender'].unique()\n","\n","print(gender,'\\n')\n","\n","masculino_str = [\"male\", \"m\", \"male-ish\", \"maile\", \"mal\", \"male (cis)\", \"make\", \"male \", \"man\",\"msle\", \"mail\", \"malr\",\"cis man\", \"Cis Male\", \"cis male\"]\n","trans_str = [\"trans-female\", \"something kinda male?\", \"queer/she/they\", \"non-binary\",\"nah\", \"all\", \"enby\", \"fluid\", \"genderqueer\", \"androgyne\", \"agender\", \"male leaning androgynous\", \"guy (-ish) ^_^\", \"trans woman\", \"neuter\", \"female (trans)\", \"queer\", \"ostensibly male, unsure what that really means\"]           \n","femino_str = [\"cis female\", \"f\", \"female\", \"woman\",  \"femake\", \"female \",\"cis-female/femme\", \"female (cis)\", \"femail\"]\n","\n","for (row, col) in survey.iterrows():\n","\n","    if str.lower(col.Gender) in masculino_str:\n","        survey['Gender'].replace(to_replace=col.Gender, value='male', inplace=True)\n","\n","    if str.lower(col.Gender) in femino_str:\n","        survey['Gender'].replace(to_replace=col.Gender, value='female', inplace=True)\n","\n","    if str.lower(col.Gender) in trans_str:\n","        survey['Gender'].replace(to_replace=col.Gender, value='trans', inplace=True)\n","\n","print(survey['Gender'].unique())\n","\n","retirar = ['A little about you', 'p']\n","survey = survey[~survey['Gender'].isin(retirar)]\n","\n","print(survey['Gender'].unique())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jqXOoXNWGiwO","executionInfo":{"status":"aborted","timestamp":1660599861372,"user_tz":240,"elapsed":26,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":[""]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861372,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"UXuNrJ5KGDQB"},"outputs":[],"source":["lista = survey['Age'].unique()\n","lista\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vPfucntoJJX-","executionInfo":{"status":"aborted","timestamp":1660599861372,"user_tz":240,"elapsed":26,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":[""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CRt5HGvaFnwO","executionInfo":{"status":"aborted","timestamp":1660599861373,"user_tz":240,"elapsed":26,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["#complete missing age with mean\n","survey['Age'].fillna(survey['Age'].median(), inplace = True)\n","\n","# Fill with media() values < 18 and > 120\n","s = pd.Series(survey['Age'])\n","\n","s[s<18] = survey['Age'].median()\n","\n","survey['Age'] = s\n","\n","s = pd.Series(survey['Age'])\n","\n","s[s>120] = survey['Age'].median()\n","\n","survey['Age'] = s\n","\n","#Faixas de idade\n","survey['age_range'] = pd.cut(survey['Age'], [0,20,30,65,100], labels=[\"0-20\", \"21-30\", \"31-65\", \"66-100\"], include_lowest=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":25,"status":"aborted","timestamp":1660599861373,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"rrymfKBUKQhi"},"outputs":[],"source":["lista = survey['Age'].unique()\n","lista"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861374,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"pNqhXZEeK65V"},"outputs":[],"source":["survey['self_employed'] = survey['self_employed'].replace([padraoString], 'No')\n","print(survey['self_employed'].unique())"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861374,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"Z9t-ElP1M4fR"},"outputs":[],"source":["survey['work_interfere'] = survey['work_interfere'].replace([padraoString], 'Don\\'t know' )\n","print(survey['work_interfere'].unique())"]},{"cell_type":"code","source":["#['Gender','self_employed','remote_work','work_interfere','family_history', 'benefits', 'care_options', 'anonymity', 'leave','mental_health_interview','phys_health_interview']\n","\n","print('Gender',survey['Gender'].unique())\n","print('self_employed',survey['self_employed'].unique())\n","print('remote_work',survey['remote_work'].unique())\n","print('work_interfere',survey['work_interfere'].unique())\n","print('family_history',survey['family_history'].unique())\n","print('benefits',survey['benefits'].unique())\n","print('care_options',survey['care_options'].unique())\n","print('anonymity',survey['anonymity'].unique())\n","print('leave',survey['leave'].unique())\n","print('mental_health_interview',survey['mental_health_interview'].unique())\n","print('phys_health_interview',survey['phys_health_interview'].unique())\n","print('work_interfere',survey['work_interfere'].unique())"],"metadata":{"id":"07PM8m3C6uQs","executionInfo":{"status":"aborted","timestamp":1660599861375,"user_tz":240,"elapsed":26,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":25,"status":"aborted","timestamp":1660599861375,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"gWFfBKPOOjWn"},"outputs":[],"source":["#Encoding data\n","labelDict = {}\n","for feature in survey:\n","    le = preprocessing.LabelEncoder()\n","    le.fit(survey[feature])\n","    le_name_mapping = dict(zip(le.classes_, le.transform(le.classes_)))\n","    survey[feature] = le.transform(survey[feature])\n","    # Get labels\n","    labelKey = 'label_' + feature\n","    labelValue = [*le_name_mapping]\n","    labelDict[labelKey] =labelValue\n","    \n","for key, value in labelDict.items():     \n","    print(key, value)\n","\n","# #Get rid of 'Country'\n","# train_df = survey.drop(['Country'], axis= 1)\n","# train_df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861376,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"z9anMKzzOjSM"},"outputs":[],"source":["#missing data\n","total = survey.isnull().sum().sort_values(ascending=False)\n","percent = (survey.isnull().sum()/survey.isnull().count()).sort_values(ascending=False)\n","missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n","missing_data.head(20)\n","print(missing_data)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861376,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"LJsEy-jtOjPK"},"outputs":[],"source":["#correlation matrix\n","corrmat = survey.corr()\n","f, ax = plt.subplots(figsize=(12, 9))\n","sns.heatmap(corrmat, vmax=.8, square=True);\n","plt.show()\n","\n","#treatment correlation matrix\n","k = 10 #number of variables for heatmap\n","cols = corrmat.nlargest(k, 'treatment')['treatment'].index\n","cm = np.corrcoef(survey[cols].values.T)\n","sns.set(font_scale=1.25)\n","hm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26,"status":"aborted","timestamp":1660599861377,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"GVKWMf550vTd"},"outputs":[],"source":["plt.figure(figsize=(12,8))\n","sns.distplot(survey[\"Age\"], bins=24)\n","plt.title(\"Distribuition and density by Age\")\n","plt.xlabel(\"Age\")"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27,"status":"aborted","timestamp":1660599861378,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"qmB4pER-3udr"},"outputs":[],"source":["# Separate by treatment or not\n","\n","g = sns.FacetGrid(survey, col='Tratamento', size=5)\n","g = g.map(sns.distplot, \"Age\")"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27,"status":"aborted","timestamp":1660599861378,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"WDxEdiCL332R"},"outputs":[],"source":["# Let see how many people has been treated\n","plt.figure(figsize=(12,8))\n","labels = labelDict['label_Gender']\n","g = sns.countplot(x=\"treatment\", data=survey)\n","g.set_xticklabels(labels)\n","\n","plt.title('Total Distribuition by treated or not')"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27,"status":"aborted","timestamp":1660599861379,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"xEr_fPbt4MHb"},"outputs":[],"source":["o = labelDict['label_age_range']\n","\n","g = sns.factorplot(x=\"age_range\", y=\"treatment\", hue=\"Gender\", data=survey, kind=\"bar\",  ci=None, size=5, aspect=2, legend_out = True)\n","g.set_xticklabels(o)\n","\n","plt.title('Probability of mental health condition')\n","plt.ylabel('Probability x 100')\n","plt.xlabel('Age')\n","# replace legend labels\n","\n","new_labels = labelDict['label_Gender']\n","for t, l in zip(g._legend.texts, new_labels): t.set_text(l)\n","\n","# Positioning the legend\n","g.fig.subplots_adjust(top=0.9,right=0.8)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27,"status":"aborted","timestamp":1660599861379,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"nfH3DUoI5jLn"},"outputs":[],"source":["o = labelDict['label_family_history']\n","g = sns.factorplot(x=\"family_history\", y=\"treatment\", hue=\"Gender\", data=survey, kind=\"bar\", ci=None, size=5, aspect=2, legend_out = True)\n","g.set_xticklabels(o)\n","plt.title('Probability of mental health condition')\n","plt.ylabel('Probability x 100')\n","plt.xlabel('Family History')\n","\n","# replace legend labels\n","new_labels = labelDict['label_Gender']\n","for t, l in zip(g._legend.texts, new_labels): t.set_text(l)\n","\n","# Positioning the legend\n","g.fig.subplots_adjust(top=0.9,right=0.8)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27,"status":"aborted","timestamp":1660599861380,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"lj5ov-km6LSv"},"outputs":[],"source":["o = labelDict['label_care_options']\n","g = sns.factorplot(x=\"care_options\", y=\"treatment\", hue=\"Gender\", data=survey, kind=\"bar\", ci=None, size=5, aspect=2, legend_out = True)\n","g.set_xticklabels(o)\n","plt.title('Probability of mental health condition')\n","plt.ylabel('Probability x 100')\n","plt.xlabel('Care options')\n","\n","# replace legend labels\n","new_labels = labelDict['label_Gender']\n","for t, l in zip(g._legend.texts, new_labels): t.set_text(l)\n","\n","# Positioning the legend\n","g.fig.subplots_adjust(top=0.9,right=0.8)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":27,"status":"aborted","timestamp":1660599861380,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"uzSQHXPj6M7n"},"outputs":[],"source":["o = labelDict['label_benefits']\n","g = sns.factorplot(x=\"care_options\", y=\"treatment\", hue=\"Gender\", data=survey, kind=\"bar\", ci=None, size=5, aspect=2, legend_out = True)\n","g.set_xticklabels(o)\n","plt.title('Probability of mental health condition')\n","plt.ylabel('Probability x 100')\n","plt.xlabel('Benefits')\n","\n","# replace legend labels\n","new_labels = labelDict['label_Gender']\n","for t, l in zip(g._legend.texts, new_labels): t.set_text(l)\n","\n","# Positioning the legend\n","g.fig.subplots_adjust(top=0.9,right=0.8)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5989,"status":"aborted","timestamp":1660599861381,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"kzXar3586Qvx"},"outputs":[],"source":["o = labelDict['label_work_interfere']\n","g = sns.factorplot(x=\"work_interfere\", y=\"treatment\", hue=\"Gender\", data=survey, kind=\"bar\", ci=None, size=5, aspect=2, legend_out = True)\n","g.set_xticklabels(o)\n","plt.title('Probability of mental health condition')\n","plt.ylabel('Probability x 100')\n","plt.xlabel('Work interfere')\n","\n","# replace legend labels\n","new_labels = labelDict['label_Gender']\n","for t, l in zip(g._legend.texts, new_labels): t.set_text(l)\n","\n","# Positioning the legend\n","g.fig.subplots_adjust(top=0.9,right=0.8)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5978,"status":"aborted","timestamp":1660599861381,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"1LeU-t-gGzN3"},"outputs":[],"source":["# Scaling Age\n","scaler = MinMaxScaler()\n","survey['Age'] = scaler.fit_transform(survey[['Age']])\n","survey.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5968,"status":"aborted","timestamp":1660599861381,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"XbsPz1gAMKA4"},"outputs":[],"source":["survey"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5960,"status":"aborted","timestamp":1660599861382,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"AhUjwu2iHH9c"},"outputs":[],"source":["survey.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5953,"status":"aborted","timestamp":1660599861382,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"Pqpr-qIhFU_j"},"outputs":[],"source":["len(survey.columns)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5947,"status":"aborted","timestamp":1660599861383,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"xKAFiV5pOOgP"},"outputs":[],"source":["survey.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wn0LGedGMgNP","executionInfo":{"status":"aborted","timestamp":1660599861383,"user_tz":240,"elapsed":5945,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["ultima_coluna = survey.pop('treatment')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Jt57NFAsMmBJ","executionInfo":{"status":"aborted","timestamp":1660599861383,"user_tz":240,"elapsed":5943,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["survey.insert(23,'treatment',ultima_coluna)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5934,"status":"aborted","timestamp":1660599861384,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"nXqQsOC8NsCw"},"outputs":[],"source":["survey.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5925,"status":"aborted","timestamp":1660599861384,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"2J8NC9O0TFnH"},"outputs":[],"source":["survey"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5919,"status":"aborted","timestamp":1660599861385,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"cgpnN7_kbDJ2"},"outputs":[],"source":["survey.columns"]},{"cell_type":"code","source":["survey['Gender'].unique()"],"metadata":{"id":"HmKPQek55f6r","executionInfo":{"status":"aborted","timestamp":1660599861385,"user_tz":240,"elapsed":5912,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DKhiL1WBGxH8","executionInfo":{"status":"aborted","timestamp":1660599861386,"user_tz":240,"elapsed":5910,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["colun = ['Gender','self_employed','remote_work','work_interfere','family_history', 'benefits', 'care_options', 'anonymity', 'leave','mental_health_interview','phys_health_interview']  \n","X_survey = survey[colun].values\n","y_survey = survey['treatment'].values\n","# X_survey = survey[colun].values"]},{"cell_type":"code","source":["print('Gender',survey['Gender'].unique())\n","print('self_employed',survey['self_employed'].unique())\n","print('remote_work',survey['remote_work'].unique())\n","print('work_interfere',survey['work_interfere'].unique())\n","print('family_history',survey['family_history'].unique())\n","print('benefits',survey['benefits'].unique())\n","print('care_options',survey['care_options'].unique())\n","print('anonymity',survey['anonymity'].unique())\n","print('leave',survey['leave'].unique())\n","print('mental_health_interview',survey['mental_health_interview'].unique())\n","print('phys_health_interview',survey['phys_health_interview'].unique())\n","print('work_interfere',survey['work_interfere'].unique())"],"metadata":{"id":"NC_nhyakVw-3","executionInfo":{"status":"aborted","timestamp":1660599861386,"user_tz":240,"elapsed":5902,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5895,"status":"aborted","timestamp":1660599861386,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"_ur114IOOPwn"},"outputs":[],"source":["X_survey"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5889,"status":"aborted","timestamp":1660599861387,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"xaVBOP6mOcPF"},"outputs":[],"source":["y_survey"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5882,"status":"aborted","timestamp":1660599861387,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"n7AQsxhOgf5N"},"outputs":[],"source":["X_survey.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":5875,"status":"aborted","timestamp":1660599861388,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"},"user_tz":240},"id":"oOHOCav2gf22"},"outputs":[],"source":["y_survey.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ri-qivEtOSj2","executionInfo":{"status":"aborted","timestamp":1660599861388,"user_tz":240,"elapsed":5873,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["X_train, X_rem, y_train, y_rem = train_test_split(X_survey,y_survey, train_size=0.8)\n","X_valid, X_test, y_valid, y_test = train_test_split(X_rem,y_rem, test_size=0.5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZtJqjSiMjNe3","executionInfo":{"status":"aborted","timestamp":1660599861389,"user_tz":240,"elapsed":5866,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["print(X_train.shape, y_train.shape)\n","print(X_test.shape, y_test.shape)\n","print(X_valid.shape, y_valid.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7aTCMR_CRMQQ","executionInfo":{"status":"aborted","timestamp":1660599861389,"user_tz":240,"elapsed":5863,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["with open('survey.pkl', mode = 'wb') as f:\n","  pickle.dump([X_train, X_test, X_valid,y_train, y_test, y_valid], f)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uLvv6Szc6bkb","executionInfo":{"status":"aborted","timestamp":1660599861389,"user_tz":240,"elapsed":5860,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["with open('/content/survey.pkl', 'rb') as f:\n","  X_train, X_test, X_valid,y_train, y_test, y_val = pickle.load(f)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_7hbfOT70FpO","executionInfo":{"status":"aborted","timestamp":1660599861390,"user_tz":240,"elapsed":5855,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["len(X_survey)"]},{"cell_type":"markdown","metadata":{"id":"4VW4tWUT5aXU"},"source":["## PARAMETROS"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Msh88XchA51b","executionInfo":{"status":"aborted","timestamp":1660599861390,"user_tz":240,"elapsed":5853,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["parametros_arvore = { 'criterion': ['gini', 'entropy'],\n","                'splitter': ['best', 'random'],\n","                'min_samples_split': [2,5,10],\n","                'min_samples_leaf':  [1,5,10]}\n","\n","parametros = {'hidden_layer_sizes' : [116],\n","    'activation':['relu','logistic','tahn'],\n","              'solver':['adam','sgd, ibfgs'],\n","              'batch_size':[10,56],\n","              'learning_rate' : ['constant', 'invscaling', 'adaptive'],\n","              }"]},{"cell_type":"markdown","metadata":{"id":"w-UBSh792i-H"},"source":["## NAIVY BAES"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eESHh8fW2nm-","executionInfo":{"status":"aborted","timestamp":1660599861391,"user_tz":240,"elapsed":5844,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["naivy = GaussianNB()\n","naivy.fit(X_survey, y_survey)\n","\n","previsores = naivy.predict(X_test)\n","previsores\n","\n","accuracy = accuracy_score(y_test, previsores)\n","accuracy\n","\n","\n","cm = ConfusionMatrix(naivy)\n","cm.fit(X_train, y_train)\n","cm.score(X_test, y_test)"]},{"cell_type":"markdown","metadata":{"id":"4cL7Z1R3P7Ep"},"source":["## ARVORE DE DECISÃO"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fFgicDoLIzgE","executionInfo":{"status":"aborted","timestamp":1660599861391,"user_tz":240,"elapsed":5837,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["grid_search = GridSearchCV(estimator = DecisionTreeClassifier(), param_grid = parametros_arvore)\n","grid_search.fit(X_survey, y_survey)\n","melhores_parametros = grid_search.best_params_\n","melhor_resultado = grid_search.best_score_\n","print(melhores_parametros)\n","print(melhor_resultado)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"z4-AaKT-QBgH","executionInfo":{"status":"aborted","timestamp":1660599861391,"user_tz":240,"elapsed":5830,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["resultado_arvore = []\n","# resultado_redes_neurais = []\n","\n","for i in range(30):\n","  kfold = KFold(n_splits=10, shuffle=True, random_state=i)\n","\n","  arvore = DecisionTreeClassifier(criterion='gini', min_samples_leaf = 10, min_samples_split = 10, splitter = 'random')\n","  scores = cross_val_score(arvore, X_survey, y_survey, cv = kfold)\n","  print(scores)\n","  print(scores.mean())\n","  resultado_arvore.append(scores.mean())\n","\n","  # rede_neural = MLPClassifier(activation='relu', batch_size = 10, solver = 'adam')\n","  # scores = cross_val_score(rede_neural, X_credit, y_credit, cv = kfold)\n","  # print(scores)\n","  # print(scores.mean())\n","  # resultado_redes_neurais.append(scores.mean())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RzZnfxD9FHpv","executionInfo":{"status":"aborted","timestamp":1660599861392,"user_tz":240,"elapsed":5822,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["arvore.fit(X_survey, y_survey)\n","previsores_1 = arvore.predict(X_test)\n","previsores_1\n","\n","accuracy = accuracy_score(y_test, previsores_1)\n","accuracy\n","\n","\n","cm = ConfusionMatrix(arvore)\n","cm.fit(X_train, y_train)\n","cm.score(X_test, y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wcx5-C2XG4Et","executionInfo":{"status":"aborted","timestamp":1660599861393,"user_tz":240,"elapsed":5821,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":[""]},{"cell_type":"markdown","metadata":{"id":"2EYdDXzVVCxb"},"source":["## REDE NEURAL"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A2Wc8Pir5eij","executionInfo":{"status":"aborted","timestamp":1660599861900,"user_tz":240,"elapsed":10,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["lista = survey['Age'].unique()\n","print(len(lista))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5b7NMFYUHWH8","executionInfo":{"status":"aborted","timestamp":1660599861901,"user_tz":240,"elapsed":10,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["elementos = survey.columns\n","elementos = elementos.tolist()\n","lista_total = []\n","soma = 0\n","for i in elementos:\n","  valor = survey[i].unique()\n","  lista_total.append(valor)\n","  soma = soma + len(valor)\n","print(soma)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PmuFp7k32kG5","executionInfo":{"status":"aborted","timestamp":1660599861902,"user_tz":240,"elapsed":11,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["grid_search = GridSearchCV(estimator = MLPClassifier(), param_grid = parametros)\n","grid_search.fit(X_survey, y_survey)\n","melhores_parametros = grid_search.best_params_\n","melhor_resultado = grid_search.best_score_\n","print(melhores_parametros)\n","print(melhor_resultado)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2EoXIo02VFW9","executionInfo":{"status":"aborted","timestamp":1660599861902,"user_tz":240,"elapsed":11,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["# resultado_arvore = []\n","resultado_redes_neurais = []\n","\n","for i in range(30):\n","  kfold = KFold(n_splits=10, shuffle=True, random_state=i)\n","\n","  # arvore = DecisionTreeClassifier(criterion='gini', min_samples_leaf = 10, min_samples_split = 10, splitter = 'random')\n","  # scores = cross_val_score(arvore, X_survey, y_survey, cv = kfold)\n","  # print(scores)\n","  # print(scores.mean())\n","  # resultado_arvore.append(scores.mean())\n","\n","  rede_neural = MLPClassifier(activation='logistic', batch_size = 56, hidden_layer_sizes = 116, learning_rate = 'adaptive', solver = 'adam')\n","  scores = cross_val_score(rede_neural, X_survey, y_survey, cv = kfold)\n","  print(scores)\n","  print(scores.mean())\n","  resultado_redes_neurais.append(scores.mean())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AqNFX4d5o4S3","executionInfo":{"status":"aborted","timestamp":1660599861902,"user_tz":240,"elapsed":11,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["rede_neural.fit(X_train, y_train)\n","\n","previsores_2 = rede_neural.predict(X_test)\n","previsores_2\n","\n","accuracy_score(y_test, previsores_2)\n","\n","cm = ConfusionMatrix(rede_neural)\n","cm.fit(X_train, y_train)\n","cm.score(X_test, y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Mfbfkp9DynZD","executionInfo":{"status":"aborted","timestamp":1660599861903,"user_tz":240,"elapsed":12,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["survey.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oZGt9N5K6xGH","executionInfo":{"status":"aborted","timestamp":1660599861903,"user_tz":240,"elapsed":11,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["pickle.dump(naivy, open('survey_naivy.sav', 'wb'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mpWQaHZJ6w_f","executionInfo":{"status":"aborted","timestamp":1660599861903,"user_tz":240,"elapsed":11,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["pickle.dump(arvore, open('survey_arvore_oficial.sav', 'wb'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wqp2bCQl6woZ","executionInfo":{"status":"aborted","timestamp":1660599861904,"user_tz":240,"elapsed":12,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["# pickle.dump(rede_neural, open('survey_redeneural.sav', 'wb'))"]},{"cell_type":"markdown","metadata":{"id":"tg023Tn16a34"},"source":["## TENSOR FLOW"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TlGo1pga1Z2M","executionInfo":{"status":"aborted","timestamp":1660599861904,"user_tz":240,"elapsed":12,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["print(X_train.shape, y_train.shape)\n","print(X_test.shape, y_test.shape)\n","print(X_valid.shape, y_valid.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EPZmlN2TcMwY","executionInfo":{"status":"aborted","timestamp":1660599861905,"user_tz":240,"elapsed":13,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["model = tf.keras.models.Sequential()\n","model.add(tf.keras.layers.Dense(units=63, activation='relu',input_shape=(11,)))\n","model.add(tf.keras.layers.Dense(units=63, activation='relu'))\n","model.add(tf.keras.layers.Dense(units=1, activation='linear'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WU09okdj1nVK","executionInfo":{"status":"aborted","timestamp":1660599861905,"user_tz":240,"elapsed":13,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["model.summary()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Geln7sRv1xeC","executionInfo":{"status":"aborted","timestamp":1660599861905,"user_tz":240,"elapsed":12,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["model.compile(optimizer='Adam',loss = 'mean_squared_error', metrics = 'accuracy')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sr1kM7wM1yya","executionInfo":{"status":"aborted","timestamp":1660599861906,"user_tz":240,"elapsed":13,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["epochs_hisst = model.fit(X_train, y_train, epochs= 50, batch_size = 50, validation_split = 0.2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pGgOt4rbg94j","executionInfo":{"status":"aborted","timestamp":1660599861906,"user_tz":240,"elapsed":13,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["model.save('modelo.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"82aNH8Fu0ZRI","executionInfo":{"status":"aborted","timestamp":1660599861906,"user_tz":240,"elapsed":13,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"outputs":[],"source":["from keras.models import load_model\n","\n","\n","model = load_model('modelo.h5')\n","\n","print(model.summary())"]},{"cell_type":"code","source":["methodDict = {}\n","methodDict['NaivyBaes'] = 0.7857142857142857 * 100\n","methodDict['ArvoreDeDecisão'] = 0.8412698412698413 * 100\n","methodDict['RedesNeurais'] = 0.7936507936507936 * 100\n","methodDict['TensorFLow'] = 0.7960 * 100"],"metadata":{"id":"7mhNDd4dIp_N","executionInfo":{"status":"aborted","timestamp":1660599861907,"user_tz":240,"elapsed":14,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plotSuccess():\n","    s = pd.Series(methodDict)\n","    s = s.sort_values(ascending=False)\n","    plt.figure(figsize=(12,8))\n","    #Colors\n","    ax = s.plot(kind='bar') \n","    for p in ax.patches:\n","        ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.005, p.get_height() * 1.005))\n","    plt.ylim([70.0, 90.0])\n","    plt.xlabel('Method')\n","    plt.ylabel('Percentage')\n","    plt.title('Success of methods')\n","    plt.show()"],"metadata":{"id":"uW7h_3ZZDUDH","executionInfo":{"status":"aborted","timestamp":1660599861907,"user_tz":240,"elapsed":14,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plotSuccess()"],"metadata":{"id":"_MfPFWKoLeQ5","executionInfo":{"status":"aborted","timestamp":1660599861908,"user_tz":240,"elapsed":15,"user":{"displayName":"Vilson Filho","userId":"11660394857914808084"}}},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":[],"name":"script_project_ia_mi","provenance":[]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}